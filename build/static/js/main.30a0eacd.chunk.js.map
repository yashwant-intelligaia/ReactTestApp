{"version":3,"sources":["component/Task1.js","core/Style.js","component/Task2.js","component/Task3.js","App.js","index.js"],"names":["useStyles","makeStyles","root","maxWidth","margin","media","height","typo","textAlign","Task1","greeting","activeHour","Date","getHours","backgroundUrl","classes","Card","className","CardActionArea","CardMedia","image","title","alt","CardContent","Typography","gutterBottom","variant","component","textStyle","width","textCenter","buttonStyle","Task2","date","hour","watchTime","getMinutes","getSeconds","useState","time","setTime","CardActions","Grid","item","xs","sm","Button","onClick","now","minute","seconds","period","color","Alert","props","elevation","Task3","name","changeName","address","changeAddress","showSuccess","changeShowSuccess","handleCloseSuccess","useEffect","setInterval","onSubmit","event","console","log","preventDefault","container","spacing","TextField","id","label","value","onChange","target","autoComplete","multiline","rows","type","disabled","Snackbar","open","autoHideDuration","onClose","severity","theme","selectTask","flexGrow","menuButton","marginRight","App","anchorEl","setAnchorEl","task","setTask","Boolean","handleClose","AppBar","position","Toolbar","IconButton","edge","aria-label","aria-controls","aria-haspopup","currentTarget","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","PaperProps","style","maxHeight","map","element","index","MenuItem","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.30a0eacd.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 800,\n    margin: \"100px auto\"\n  },\n  media: {\n    height: 500\n  },\n  typo: {\n    textAlign: \"center\"\n  }\n});\n\nexport default function Task1() {\n  let greeting = \"\";\n  let date = new Date();\n  let activeHour = date.getHours();\n  let backgroundUrl = \"https://hips.hearstapps.com/hmg-prod.s3.amazonaws.com/images/sunrise-quotes-21-1586892331.jpg\";\n  if (activeHour >= 4 && activeHour < 12) {\n    greeting = \"Good morning\";\n    backgroundUrl = \"https://hips.hearstapps.com/hmg-prod.s3.amazonaws.com/images/sunrise-quotes-21-1586892331.jpg\"\n  } else if (activeHour >= 12 && activeHour < 17) {\n    greeting = \"Good Afternoon\";\n    backgroundUrl = \"https://wallpapercave.com/wp/wp2214654.jpg\"\n  } else if (activeHour >= 17 && activeHour < 20) {\n    greeting = \"Good Evening\";\n    backgroundUrl = \"https://wallpapercave.com/wp/wp3113563.jpg\"\n  } else {\n    greeting = \"Good Night\";\n    backgroundUrl = \"https://wallpaperaccess.com/full/253790.jpg\"\n  }\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.root}>\n      <CardActionArea>\n        <CardMedia\n          className={classes.media}\n          image={backgroundUrl}\n          title={greeting}\n          alt={greeting}\n        />\n        <CardContent>\n          <Typography className={classes.typo} gutterBottom variant=\"h5\" component=\"h2\">\n            Hello David, {greeting}\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n    </Card>\n  );\n}","import { makeStyles } from '@material-ui/core/styles';\nexport const useStyles = makeStyles({\n    root: {\n        maxWidth: 500,\n        margin: \"100px auto\"\n    },\n    media: {\n        height: 500\n    },\n    typo: {\n        textAlign: \"center\"\n    },\n    textStyle: {\n        width: \"80%\"\n    },\n    textCenter:{\n        textAlign:\"center\"\n    },\n    buttonStyle:{\n        textAlign: \"right\",\n        margin: \"0 10% 10% 10%\"\n    }\n});","import React, { useState } from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardActions from '@material-ui/core/CardActions';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport { useStyles } from '../core/Style';\nexport default function Task2() {\n  const date = new Date();\n  const hour = (date.getHours() > 12 ? (date.getHours() - 12) : date.getHours());\n  const minute = (date.getMinutes() >= 10 ? (date.getMinutes()) : (\"0\" + date.getMinutes()));\n  const seconds = (date.getSeconds() >= 10 ? date.getSeconds() : (\"0\" + date.getSeconds()));\n  const period = ((date.getHours() > 12) ? \"PM\" : \"AM\")\n  const watchTime = ((hour > 9 ? hour : (\"0\" + hour)) + \":\" + minute + \":\" + seconds + \" \" + period);\n  const [time, setTime] = useState(watchTime);\n  const classes = useStyles();\n  const backgroundUrl = \"https://i.pinimg.com/originals/24/48/24/244824821f943a397973d35a9b5f6748.jpg\";\n\n  const updateTime = () => {\n    let now = new Date();\n    let hour = (now.getHours() > 12 ? (now.getHours() - 12) : now.getHours());\n    hour = (hour > 9 ? hour : (\"0\" + hour));\n    let minute = (date.getMinutes() >= 10 ? (date.getMinutes()) : (\"0\" + date.getMinutes()));\n    let seconds = (now.getSeconds() >= 10 ? now.getSeconds() : (\"0\" + now.getSeconds()));\n    let period = ((date.getHours() > 12) ? \"PM\" : \"AM\")\n    setTime(hour + \":\" + minute + \":\" + seconds + \" \" + period);\n  }\n  return (\n    <Card className={classes.root}>\n      <CardMedia\n        className={classes.media}\n        image={backgroundUrl}\n        title={time}\n        alt={time}\n      />\n      <CardActions>\n        <Grid item xs={9} sm={9}>\n          <h1>{time}</h1>\n        </Grid>\n        <Grid item xs={3} sm={3}>\n          <Button onClick={updateTime} variant=\"contained\" color=\"primary\">Update</Button>\n        </Grid>\n      </CardActions>\n    </Card>\n  );\n}","import { useState, useEffect } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport { useStyles } from '../core/Style';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { off } from 'process';\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\nfunction Task3(props) {\n    const classes = useStyles();\n    const [name, changeName] = useState(\"\");\n    const [address, changeAddress] = useState(\"\");\n    const [showSuccess, changeShowSuccess] = useState(false);\n    const handleAddress = (event) => { changeAddress(event.target.value) }\n    const handleName = (event) => { changeName(event.target.value) }\n    const handleSubmit = (event) => { console.log('submit form'); changeShowSuccess(true); changeName(\"\"); changeAddress(\"\"); event.preventDefault(); }\n    const handleCloseSuccess = () => { changeShowSuccess(false); }\n\n    useEffect(() => {\n        if (showSuccess) {\n            setInterval(() => {\n                changeShowSuccess(false);\n            }, 2000)\n        }\n    }, [showSuccess])\n\n    return (\n        <Card className={classes.root}>\n            <CardActions>\n                <form onSubmit={handleSubmit}>\n                    <Grid container spacing={2} className={classes.textCenter}>\n                        <Grid item xs={12}><h1>Form</h1></Grid>\n                        <Grid item xs={12}>\n                            <TextField className={classes.textStyle} id=\"outlined-basic\" label=\"Name\" variant=\"outlined\" value={name} onChange={handleName} autoComplete=\"off\" />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                id=\"outlined-multiline-static\"\n                                label=\"Address\"\n                                multiline\n                                rows={4}\n                                variant=\"outlined\"\n                                className={classes.textStyle}\n                                value={address}\n                                autoComplete=\"off\"\n                                onChange={handleAddress}\n                            />\n                        </Grid>\n                        <Grid item xs={12} className={classes.buttonStyle}>\n                            <Button type=\"submit\" variant=\"contained\" color=\"primary\" disabled={name === \"\" || address === \"\"}>Submit</Button>\n                        </Grid>\n                    </Grid>\n                </form>\n            </CardActions>\n            <Snackbar open={showSuccess} autoHideDuration={2000} onClose={handleCloseSuccess}>\n                <Alert onClose={handleCloseSuccess} severity=\"success\">\n                    Form Saved Successfully.\n                </Alert>\n            </Snackbar>\n        </Card>\n    );\n}\n\nexport default Task3;","import React, { useState } from 'react';\nimport Task1 from './component/Task1';\nimport Task2 from './component/Task2';\nimport Task3 from './component/Task3';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuOpenIcon from '@material-ui/icons/MenuOpen';\nimport BarChartIcon from '@material-ui/icons/BarChart';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom'\nconst useStyles = makeStyles((theme) => ({\n  selectTask: {\n    width: 200\n  },\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = useState(null); //State Hook\n  const [task, setTask] = useState(\"task1\");\n  const open = Boolean(anchorEl);\n  const taskList = ['task1', 'task2', 'task3'];\n\n  const handleMenu = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const selectTask = (val) => {\n    setTask(val);\n    handleClose();\n  }\n\n  var component = <Task1 />\n  switch (task) {\n    case 'task1':\n      component = <Task1 />\n      break;\n\n    case 'task2':\n      component = <Task2 />\n      break;\n    \n    case 'task3':\n      component = <Task3/>\n      break;\n\n    default:\n      component = <Task1 />\n      break;\n  }\n\n  return (\n    <div>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n            <BarChartIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>TestApp</Typography>\n          <div>\n            <IconButton aria-label=\"account of current user\" aria-controls=\"menu-appbar\" aria-haspopup=\"true\" onClick={handleMenu} color=\"inherit\">\n              <MenuOpenIcon />\n            </IconButton>\n            <Menu id=\"menu-appbar\" anchorEl={anchorEl} anchorOrigin={{ vertical: 'top', horizontal: 'right' }} keepMounted transformOrigin={{ vertical: 'top', horizontal: 'right' }} open={open} onClose={handleClose} PaperProps={{ style: { maxHeight: 30 * 4.5, width: '20ch' } }} >\n              {taskList.map((element, index) => {\n                return <MenuItem key={index} onClick={() => selectTask(element)}>{element}</MenuItem>\n              })}\n            </Menu>\n          </div>\n        </Toolbar>\n      </AppBar>\n      {component}\n      {/* <Router>\n        <Switch>\n          <Route exact path=\"/\">\n            <Redirect strict from=\"/\" to=\"/task1\" />\n          </Route>\n          <Route path=\"/task1\" component={Task1}></Route>\n          <Route path=\"/task2\" component={Task2}></Route>\n          <Route path=\"/task3\" component={Task3}></Route>\n        </Switch>\n      </Router> */}\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nReactDOM.render(\n  <App/>,\n  document.getElementById('root')\n)"],"sourceRoot":""}