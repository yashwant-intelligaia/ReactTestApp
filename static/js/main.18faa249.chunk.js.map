{"version":3,"sources":["component/Task1.js","component/Task2.js","App.js","index.js"],"names":["useStyles","makeStyles","root","maxWidth","margin","media","height","typo","textAlign","Task1","greeting","activeHour","Date","getHours","backgroundUrl","classes","Card","className","CardActionArea","CardMedia","image","title","alt","CardContent","Typography","gutterBottom","variant","component","Task2","date","hour","watchTime","getMinutes","getSeconds","useState","time","setTime","CardActions","Grid","item","xs","sm","Button","onClick","now","minute","seconds","period","color","theme","selectTask","width","flexGrow","menuButton","marginRight","spacing","App","anchorEl","setAnchorEl","task","setTask","open","Boolean","handleClose","AppBar","position","Toolbar","IconButton","edge","aria-label","aria-controls","aria-haspopup","event","currentTarget","Menu","id","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","PaperProps","style","maxHeight","map","element","index","MenuItem","exact","path","strict","from","to","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.18faa249.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 800,\n    margin: \"100px auto\"\n  },\n  media: {\n    height: 500\n  },\n  typo: {\n    textAlign: \"center\"\n  }\n});\n\nexport default function Task1() {\n  let greeting = \"\";\n  let date = new Date();\n  let activeHour = date.getHours();\n  let backgroundUrl = \"https://hips.hearstapps.com/hmg-prod.s3.amazonaws.com/images/sunrise-quotes-21-1586892331.jpg\";\n  if (activeHour >= 4 && activeHour < 12) {\n    greeting = \"Good morning\";\n    backgroundUrl = \"https://hips.hearstapps.com/hmg-prod.s3.amazonaws.com/images/sunrise-quotes-21-1586892331.jpg\"\n  } else if (activeHour >= 12 && activeHour < 17) {\n    greeting = \"Good Afternoon\";\n    backgroundUrl = \"https://wallpapercave.com/wp/wp2214654.jpg\"\n  } else if (activeHour >= 17 && activeHour < 20) {\n    greeting = \"Good Evening\";\n    backgroundUrl = \"https://wallpapercave.com/wp/wp3113563.jpg\"\n  } else {\n    greeting = \"Good Night\";\n    backgroundUrl = \"https://wallpaperaccess.com/full/253790.jpg\"\n  }\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.root}>\n      <CardActionArea>\n        <CardMedia\n          className={classes.media}\n          image={backgroundUrl}\n          title={greeting}\n          alt={greeting}\n        />\n        <CardContent>\n          <Typography className={classes.typo} gutterBottom variant=\"h5\" component=\"h2\">\n            Hello David, {greeting}\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n    </Card>\n  );\n}","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardActions from '@material-ui/core/CardActions';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 500,\n    margin: \"100px auto\"\n  },\n  media: {\n    height: 500\n  },\n  typo: {\n    textAlign: \"center\"\n  }\n});\n\nexport default function Task2() {\n  const date = new Date();\n  const hour = (date.getHours() > 12 ? (date.getHours() - 12) : date.getHours());\n  const minute = (date.getMinutes() >= 10 ? (date.getMinutes()) : (\"0\" + date.getMinutes()));\n  const seconds = (date.getSeconds() >= 10 ? date.getSeconds() : (\"0\" + date.getSeconds()));\n  const period = ((date.getHours()>12)?\"PM\":\"AM\")\n  const watchTime = ((hour > 9 ? hour : (\"0\" + hour)) + \":\" + minute + \":\" + seconds+ \" \"+period);\n  const [time, setTime] = useState(watchTime);\n  const classes = useStyles();\n  const backgroundUrl = \"https://i.pinimg.com/originals/24/48/24/244824821f943a397973d35a9b5f6748.jpg\";\n\n  const updateTime = () => {\n    let now = new Date();\n    let hour = (now.getHours() > 12 ? (now.getHours() - 12) : now.getHours());\n    hour = (hour > 9 ? hour : (\"0\" + hour));\n    let minute = (date.getMinutes() >= 10 ? (date.getMinutes()) : (\"0\" + date.getMinutes()));\n    let seconds = (now.getSeconds() >= 10 ? now.getSeconds() : (\"0\" + now.getSeconds()));\n    let period = ((date.getHours()>12)?\"PM\":\"AM\")\n    setTime(hour + \":\" + minute + \":\" + seconds+\" \"+period);\n  }\n  return (\n    <Card className={classes.root}>\n      <CardMedia\n        className={classes.media}\n        image={backgroundUrl}\n        title={time}\n        alt={time}\n      />\n      <CardActions>\n        <Grid item xs={9} sm={9}>\n          <h1>{time}</h1>\n        </Grid>\n        <Grid item xs={3} sm={3}>\n          <Button onClick={updateTime} variant=\"contained\" color=\"primary\">Update</Button>\n        </Grid>\n      </CardActions>\n    </Card>\n  );\n}","import React, { useState } from 'react';\nimport Task1 from './component/Task1';\nimport Task2 from './component/Task2';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuOpenIcon from '@material-ui/icons/MenuOpen';\nimport BarChartIcon from '@material-ui/icons/BarChart';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {BrowserRouter as Router, Switch, Route, Redirect} from 'react-router-dom'\nconst useStyles = makeStyles((theme) => ({\n  selectTask: {\n    width: 200\n  },\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = useState(null); //State Hook\n  const [task, setTask] = useState(\"task1\");\n  const open = Boolean(anchorEl);\n  const taskList = ['task1', 'task2'];\n\n  const handleMenu = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const selectTask = (val) => {\n    setTask(val);\n    handleClose();\n  }\n\n  var component = <Task1 />\n  switch (task) {\n    case 'task1':\n      component = <Task1 />\n      break;\n\n    case 'task2':\n      component = <Task2 />\n      break;\n\n    default:\n      component = <Task1 />\n      break;\n  }\n\n  return (\n    <div>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n            <BarChartIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>TestApp</Typography>\n          <div>\n            <IconButton aria-label=\"account of current user\" aria-controls=\"menu-appbar\" aria-haspopup=\"true\" onClick={handleMenu} color=\"inherit\">\n              <MenuOpenIcon />\n            </IconButton>\n            <Menu id=\"menu-appbar\" anchorEl={anchorEl} anchorOrigin={{ vertical: 'top', horizontal: 'right' }} keepMounted transformOrigin={{ vertical: 'top', horizontal: 'right' }} open={open} onClose={handleClose} PaperProps={{ style: { maxHeight: 30 * 4.5, width: '20ch' } }} >\n              {taskList.map((element, index) => {\n                return <MenuItem key={index} onClick={() => selectTask(element)}>{element}</MenuItem>\n              })}\n            </Menu>\n          </div>\n        </Toolbar>\n      </AppBar>\n      <Router>\n        <Switch>\n          <Route exact path=\"/\">\n            <Redirect strict from=\"/\" to=\"/task1\"/>\n          </Route>\n          <Route path=\"/task1\" component={Task1}></Route>\n          <Route path=\"/task2\" component={Task2}></Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nReactDOM.render(\n  <App/>,\n  document.getElementById('root')\n)"],"sourceRoot":""}